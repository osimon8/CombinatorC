toplevel: XOR
##
## Ends in an error in state: 0.
##
## toplevel' -> . toplevel [ # ]
##
## The known suffix of the stack is as follows:
##
##

Missing left operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: NOT XOR
##
## Ends in an error in state: 2.
##
## b_main -> NOT . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## NOT
##

Missing operand of NOT, syntax is "!<exp>"

toplevel: MINUS XOR
##
## Ends in an error in state: 3.
##
## b_main -> MINUS . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## MINUS
##

Missing operand of negation, syntax is "-<exp>"

toplevel: LPAREN XOR
##
## Ends in an error in state: 4.
##
## b_main -> LPAREN . bexp RPAREN [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Missing left operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: IF XOR
##
## Ends in an error in state: 6.
##
## bexp -> IF . bexp THEN bexp ELSE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## IF
##

Missing left operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: IF LIT SEMI
##
## Ends in an error in state: 7.
##
## b_main -> bexp . LOR bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## bexp -> IF bexp . THEN bexp ELSE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## IF bexp
##

Missing "then" of conditional, syntax is "if <exp> then <exp> else <exp>"

toplevel: LIT XOR XOR
##
## Ends in an error in state: 8.
##
## b_main -> bexp XOR . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp XOR
##

Missing left operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT XOR LIT WORD
##
## Ends in an error in state: 9.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp XOR bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp XOR bexp
##

Missing oeprator

toplevel: LIT RSHIFT XOR
##
## Ends in an error in state: 10.
##
## b_main -> bexp RSHIFT . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp RSHIFT
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT RSHIFT LIT WORD
##
## Ends in an error in state: 11.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp RSHIFT bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp RSHIFT bexp
##

Missing oeprator

toplevel: LIT PLUS XOR
##
## Ends in an error in state: 12.
##
## b_main -> bexp PLUS . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp PLUS
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT PLUS LIT WORD
##
## Ends in an error in state: 13.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp PLUS bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp PLUS bexp
##

Missing oeprator

toplevel: LIT MUL XOR
##
## Ends in an error in state: 14.
##
## b_main -> bexp MUL . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp MUL
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT MUL LIT WORD
##
## Ends in an error in state: 15.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp MUL bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp MUL bexp
##

Missing operator

toplevel: LIT EXP XOR
##
## Ends in an error in state: 16.
##
## b_main -> bexp EXP . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp EXP
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT EXP LIT WORD
##
## Ends in an error in state: 17.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp EXP bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp EXP bexp
##

Missing operator

toplevel: LIT MOD XOR
##
## Ends in an error in state: 19.
##
## b_main -> bexp MOD . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp MOD
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT MOD LIT WORD
##
## Ends in an error in state: 20.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp MOD bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp MOD bexp
##

Missing operator

toplevel: LIT DIV XOR
##
## Ends in an error in state: 21.
##
## b_main -> bexp DIV . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp DIV
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT DIV LIT WORD
##
## Ends in an error in state: 22.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp DIV bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp DIV bexp
##

Missing operator

toplevel: LIT MINUS XOR
##
## Ends in an error in state: 23.
##
## b_main -> bexp MINUS . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp MINUS
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT MINUS LIT WORD
##
## Ends in an error in state: 24.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp MINUS bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp MINUS bexp
##

Missing operator

toplevel: LIT NEQ XOR
##
## Ends in an error in state: 25.
##
## b_main -> bexp NEQ . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp NEQ
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT NEQ LIT WORD
##
## Ends in an error in state: 26.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp NEQ bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp NEQ bexp
##

Missing operator

toplevel: LIT LTE XOR
##
## Ends in an error in state: 27.
##
## b_main -> bexp LTE . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp LTE
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT LTE LIT WORD
##
## Ends in an error in state: 28.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp LTE bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp LTE bexp
##

Missing operator

toplevel: LIT LSHIFT XOR
##
## Ends in an error in state: 29.
##
## b_main -> bexp LSHIFT . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp LSHIFT
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT LSHIFT LIT WORD
##
## Ends in an error in state: 30.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp LSHIFT bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp LSHIFT bexp
##

Missing operator

toplevel: LIT LT XOR
##
## Ends in an error in state: 31.
##
## b_main -> bexp LT . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp LT
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT LT LIT WORD
##
## Ends in an error in state: 32.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp LT bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp LT bexp
##

Missing operator

toplevel: LIT GTE XOR
##
## Ends in an error in state: 33.
##
## b_main -> bexp GTE . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp GTE
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT GTE LIT WORD
##
## Ends in an error in state: 34.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp GTE bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp GTE bexp
##

Missing operator

toplevel: LIT GT XOR
##
## Ends in an error in state: 35.
##
## b_main -> bexp GT . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp GT
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT GT LIT WORD
##
## Ends in an error in state: 36.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp GT bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp GT bexp
##

Missing operator

toplevel: LIT LNEQ XOR
##
## Ends in an error in state: 37.
##
## b_main -> bexp LNEQ . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp LNEQ
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT LNEQ LIT WORD
##
## Ends in an error in state: 38.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp LNEQ bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp LNEQ bexp
##

Missing operator

toplevel: LIT LEQ XOR
##
## Ends in an error in state: 39.
##
## b_main -> bexp LEQ . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp LEQ
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT LEQ LIT WORD
##
## Ends in an error in state: 40.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp LEQ bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp LEQ bexp
##

Missing operator

toplevel: LIT EQ XOR
##
## Ends in an error in state: 41.
##
## b_main -> bexp EQ . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp EQ
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT EQ LIT WORD
##
## Ends in an error in state: 42.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp EQ bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp EQ bexp
##

Missing operator

toplevel: LIT AND XOR
##
## Ends in an error in state: 43.
##
## b_main -> bexp AND . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp AND
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT AND LIT WORD
##
## Ends in an error in state: 44.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp AND bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp AND bexp
##

Missing operator

toplevel: IF LIT THEN XOR
##
## Ends in an error in state: 45.
##
## bexp -> IF bexp THEN . bexp ELSE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## IF bexp THEN
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: IF LIT THEN LIT THEN
##
## Ends in an error in state: 46.
##
## b_main -> bexp . LOR bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ ELSE DIV COALESCE AND ]
## bexp -> IF bexp THEN bexp . ELSE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## IF bexp THEN bexp
##

"then" can only appear after the guard of a conditional, syntax is "if <exp> then <exp> else <exp>"

toplevel: LIT OR XOR
##
## Ends in an error in state: 47.
##
## b_main -> bexp OR . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp OR
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT OR LIT WORD
##
## Ends in an error in state: 48.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp OR bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp OR bexp
##

Missing operator

toplevel: LIT LOR XOR
##
## Ends in an error in state: 49.
##
## b_main -> bexp LOR . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp LOR
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT LOR LIT WORD
##
## Ends in an error in state: 50.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp LOR bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp LOR bexp
##

Missing operator

toplevel: LIT LAND XOR
##
## Ends in an error in state: 51.
##
## b_main -> bexp LAND . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp LAND
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT LAND LIT WORD
##
## Ends in an error in state: 52.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp LAND bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp LAND bexp
##

Missing operator

toplevel: IF LIT THEN LIT ELSE XOR
##
## Ends in an error in state: 53.
##
## bexp -> IF bexp THEN bexp ELSE . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## IF bexp THEN bexp ELSE
##

Missing left operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: IF LIT THEN LIT ELSE LIT WORD
##
## Ends in an error in state: 54.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## bexp -> IF bexp THEN bexp ELSE bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## IF bexp THEN bexp ELSE bexp
##

Missing operator

toplevel: LIT COALESCE XOR
##
## Ends in an error in state: 55.
##
## b_main -> bexp COALESCE . bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp COALESCE
##

Missing right operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: LIT COALESCE LIT WORD
##
## Ends in an error in state: 56.
##
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp COALESCE bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp COALESCE bexp
##

Missing operator

toplevel: LPAREN LIT THEN
##
## Ends in an error in state: 57.
##
## b_main -> bexp . LOR bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ DIV COALESCE AND ]
## b_main -> LPAREN bexp . RPAREN [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## LPAREN bexp
##

Missing operator

toplevel: MINUS LIT WORD
##
## Ends in an error in state: 59.
##
## b_main -> MINUS bexp . [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR THEN SEMI RSHIFT RPAREN PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF ELSE DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## MINUS bexp
##

Missing operator

toplevel: DIRECTIVE XOR
##
## Ends in an error in state: 61.
##
## directive -> DIRECTIVE . WORD WORD [ VAR NOT MINUS LPAREN LIT IF DIRECTIVE CIRCUIT_BIND ]
##
## The known suffix of the stack is as follows:
## DIRECTIVE
##

Invalid directive argument  

toplevel: DIRECTIVE WORD XOR
##
## Ends in an error in state: 62.
##
## directive -> DIRECTIVE WORD . WORD [ VAR NOT MINUS LPAREN LIT IF DIRECTIVE CIRCUIT_BIND ]
##
## The known suffix of the stack is as follows:
## DIRECTIVE WORD
##

Missing left operand of binary operator, syntax is "<exp> <bop> <exp>"

toplevel: CIRCUIT_BIND XOR
##
## Ends in an error in state: 64.
##
## b_assn -> CIRCUIT_BIND . VAR ASSIGN bexp [ SEMI EOF ]
##
## The known suffix of the stack is as follows:
## CIRCUIT_BIND
##

Missing output signal of circuit bind, syntax is "circuit <sig> = <exp>"

toplevel: CIRCUIT_BIND VAR XOR
##
## Ends in an error in state: 65.
##
## b_assn -> CIRCUIT_BIND VAR . ASSIGN bexp [ SEMI EOF ]
##
## The known suffix of the stack is as follows:
## CIRCUIT_BIND VAR
##

Missing '=' in circuit bind, syntax is "circuit <sig> = <exp>"

toplevel: CIRCUIT_BIND VAR ASSIGN XOR
##
## Ends in an error in state: 66.
##
## b_assn -> CIRCUIT_BIND VAR ASSIGN . bexp [ SEMI EOF ]
##
## The known suffix of the stack is as follows:
## CIRCUIT_BIND VAR ASSIGN
##

Missing output signal of circuit bind, syntax is "circuit <sig> = <exp>"

toplevel: CIRCUIT_BIND VAR ASSIGN LIT THEN
##
## Ends in an error in state: 67.
##
## b_assn -> CIRCUIT_BIND VAR ASSIGN bexp . [ SEMI EOF ]
## b_main -> bexp . LOR bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## CIRCUIT_BIND VAR ASSIGN bexp
##

Missing operator

toplevel: DIRECTIVE WORD WORD XOR
##
## Ends in an error in state: 72.
##
## dir_seq -> dir_seq . directive [ VAR NOT MINUS LPAREN LIT IF DIRECTIVE CIRCUIT_BIND ]
## program -> dir_seq . b_seq [ EOF ]
##
## The known suffix of the stack is as follows:
## dir_seq
##

Extra argument to compiler directive, directives take only a single argument

toplevel: LIT THEN
##
## Ends in an error in state: 74.
##
## b_assn -> bexp . [ SEMI EOF ]
## b_main -> bexp . LOR bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . LAND bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . COALESCE bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . OR bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . XOR bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . AND bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . EQ bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . NEQ bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . LEQ bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . LNEQ bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . LT bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . GT bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . LTE bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . GTE bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . LSHIFT bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . RSHIFT bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . PLUS bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . MINUS bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . MUL bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . DIV bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . MOD bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
## b_main -> bexp . EXP bexp [ XOR SEMI RSHIFT PLUS OR NEQ MUL MOD MINUS LTE LT LSHIFT LOR LNEQ LEQ LAND GTE GT EXP EQ EOF DIV COALESCE AND ]
##
## The known suffix of the stack is as follows:
## bexp
##

"then" can only appear after the guard of a conditional, syntax is "if <exp> then <exp> else <exp>"

toplevel: LIT SEMI XOR
##
## Ends in an error in state: 76.
##
## b_seq -> b_seq SEMI . b_assn [ SEMI EOF ]
##
## The known suffix of the stack is as follows:
## b_seq SEMI
##

Missing left operand of binary operator, syntax is "<exp> <bop> <exp>"

